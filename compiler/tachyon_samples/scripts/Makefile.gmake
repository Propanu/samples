#//==============================================================
#//
#// SAMPLE SOURCE CODE - SUBJECT TO THE TERMS OF SAMPLE CODE LICENSE AGREEMENT,
#// http://software.intel.com/en-us/articles/intel-sample-source-code-license-agreement/
#//
#// Copyright (C) Intel Corporation
#//
#// THIS FILE IS PROVIDED "AS IS" WITH NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
#// NOT LIMITED TO ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
#// PURPOSE, NON-INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS.
#//
#// =============================================================

# The C++ compiler
#CXX=g++

# detecting MS Windows* (for MinGW support)
ifeq ($(OS), Windows_NT)
RM = cmd /C del /Q /F
RD = cmd /C rmdir
UI = con
EXE = $(NAME)$(SUFFIX).exe

else
RM = rm -f
RD = rmdir -r

# detecting 64-bit platform
arch ?= $(shell uname -m)
# Possible values of interest: intel64 x86_64 amd64 ia64 ppc64 sparc sparc64
x64 ?= $(findstring 64,$(subst sparc,sparc64,$(arch)))

# see https://wiki.debian.org/Multiarch/Tuples
MULTIARCH = $(arch)
ifeq ($(arch),ia32)
MULTIARCH = i386
endif
ifeq ($(arch),intel64)
MULTIARCH = x86_64
endif
ifeq ($(arch),ppc32)
MULTIARCH = powerpc
endif
ifeq ($(arch),sparc)
MULTIARCH = sparc64
endif
MULTIARCHTUPLE ?= $(MULTIARCH)-linux-gnu

# detecting UI ("x" or "con")
UI ?= $(shell sh -c "[ -f /usr/X11R6/lib$(x64)/libX11.so -o -f /usr/lib$(x64)/libX11.so -o -f /usr/lib/$(MULTIARCHTUPLE)/libX11.so ] && echo x")

ifeq ($(UI),x)
  EXE = $(NAME)$(SUFFIX)
  UI_CXXFLAGS += -I/usr/X11R6/include
  LIBS += -lpthread -L/usr/X11R6/lib$(x64) -lX11
  # detect if libXext can be found
  ifeq ($(shell sh -c "[ -f /usr/X11R6/lib$(x64)/libXext.so -o -f /usr/lib$(x64)/libXext.so -o -f /usr/lib/$(MULTIARCHTUPLE)/libXext.so ] && echo 0"),0)
    LIBS += -lXext
  else  # no libXext
    UI_CXXFLAGS += -DX_NOSHMEM
  endif # libXext

else # ! X
  EXE = $(NAME)$(SUFFIX)
  ifeq (,$(strip $(UI)))
     UI = con
     $(warning Note: no graphics output capability detected, building for console output.)
  endif
endif # X
endif # Windows* vs. other
